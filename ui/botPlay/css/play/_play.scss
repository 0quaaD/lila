$col1-player-clock-height: 50px;
$col1-user-height: $col1-player-clock-height * 3 / 5;
$col1-mat-height: $col1-player-clock-height * 2 / 5;
$col1-moves-height: 4em;

#main-wrap {
  ---main-max-width: auto;

  @include mq-is-col1 {
    ---main-max-width: calc(
      100vh - #{$site-header-outer-height} - #{$col1-player-clock-height * 2} - #{$col1-moves-height}
    );
  }
}

.bot-game {
  grid-area: main;
  display: grid;

  @include mq-is-col1 {
    grid-template-rows: auto $col1-user-height $col1-mat-height auto auto $col1-mat-height $col1-user-height auto auto auto auto 0;
    grid-template-areas: 'pocket-top' 'user-top' 'mat-top' 'board' 'mat-bot' 'user-bot' 'pocket-bot' 'controls' 'moves' 'voice' 'kb-move';

    cg-board {
      box-shadow: none;
    }
  }

  @include mq-at-least-col2 {
    grid-template-areas:
      'board voice'
      'board .'
      'board mat-top'
      'board clock-top'
      'board user-top'
      'board moves'
      'board controls'
      'board user-bot'
      'board clock-bot'
      'board mat-bot'
      'board .'
      'kb-move .';
    grid-template-columns: var(---col2-uniboard-width) $col2-uniboard-table;
    grid-template-rows: 0 auto; // 0 to prevent `voice` from moving the table off center
    grid-column-gap: $block-gap;

    &__table {
      grid-area: 5 / 2 / 10 / 3;
    }

    .keyboard-move {
      margin-top: $block-gap;
    }

    @media (min-height: at-least($short)) {
      .moves {
        display: flex;
      }
    }
  }

  @include mq-at-least-col3 {
    grid-template-columns: var(---col3-uniboard-width) $col3-uniboard-table;
  }

  @include mq-is-col2-squeeze {
    grid-template-columns: $col2-uniboard-squeeze-width $col2-uniboard-squeeze-table;
  }
}

.bot-game__board {
  grid-area: board;
}
